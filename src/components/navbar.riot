<navbar>
  <header class="navbar">
    <a class="app-title" href="/" onclick={gotoHome}>
      <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24">
        <path fill="currentColor" fill-rule="evenodd" d="M11.75 6.406c-1.48 0-1.628.157-2.394.157C8.718 6.563 6.802 5 5.845 5S3.77 5.563 3.77 7.188v1.875c.002.492.18 2 .88 1.597c-.827.978-.91 2.119-.899 3.223c-.223.064-.45.137-.671.212c-.684.234-1.41.532-1.737.744a.75.75 0 0 0 .814 1.26c.156-.101.721-.35 1.408-.585l.228-.075c.046.433.161.83.332 1.19l-.024.013c-.41.216-.79.465-1.032.623l-.113.074a.75.75 0 1 0 .814 1.26l.131-.086c.245-.16.559-.365.901-.545q.12-.064.231-.116C6.763 19.475 9.87 20 11.75 20s4.987-.525 6.717-2.148q.11.052.231.116c.342.18.656.385.901.545l.131.086a.75.75 0 0 0 .814-1.26l-.113-.074a13 13 0 0 0-1.032-.623l-.024-.013c.171-.36.286-.757.332-1.19l.228.075c.687.235 1.252.484 1.409.585a.75.75 0 0 0 .813-1.26c-.327-.212-1.053-.51-1.736-.744a16 16 0 0 0-.672-.213c.012-1.104-.072-2.244-.9-3.222c.7.403.88-1.105.881-1.598V7.188C19.73 5.563 18.613 5 17.655 5c-.957 0-2.873 1.563-3.51 1.563c-.767 0-.915-.157-2.395-.157m-.675 9.194c.202-.069.441-.1.675-.1s.473.031.676.1c.1.034.22.088.328.174a.62.62 0 0 1 .246.476c0 .23-.139.39-.246.476s-.229.14-.328.174c-.203.069-.442.1-.676.1s-.473-.031-.675-.1a1.1 1.1 0 0 1-.329-.174a.62.62 0 0 1-.246-.476c0-.23.139-.39.246-.476s.23-.14.329-.174m2.845-3.1c.137-.228.406-.5.81-.5s.674.272.81.5c.142.239.21.527.21.813s-.068.573-.21.811c-.136.229-.406.501-.81.501s-.673-.272-.81-.5a1.6 1.6 0 0 1-.21-.812c0-.286.068-.574.21-.812m-5.96 0c.137-.228.406-.5.81-.5s.674.272.81.5c.142.239.21.527.21.813s-.068.573-.21.811c-.136.229-.406.501-.81.501s-.673-.272-.81-.5a1.6 1.6 0 0 1-.21-.812c0-.286.068-.574.21-.812" clip-rule="evenodd"/>
      </svg>
      <h2>{props.title}</h2>
    </a>
    <searchbar />
    <div class="account">
      <a href="/favorites" if={state.user !== null} class="favorites">
        Favorites ({state.favoritesCount})
      </a>
      <p if={state.user !== null} class="account-name">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
          <circle cx="12" cy="8" r="4" fill="currentColor"/>
          <path fill="currentColor" fill-opacity="0.25" fill-rule="evenodd" d="M12 13c-3.67 0-6.68 2.42-6.976 5.5c-.026.275.2.5.476.5h13a.465.465 0 0 0 .476-.5C18.68 15.42 15.67 13 12 13" clip-rule="evenodd"/>
        </svg>
        <span>{state.user.username}</span>
      </p>
      <button if={state.user !== null} class="logout" onclick={logout}>
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24">
          <path fill="currentColor" d="m17 8l-1.41 1.41L17.17 11H9v2h8.17l-1.58 1.58L17 16l4-4zM5 5h7V3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h7v-2H5z"/>
        </svg>
      </button>
      <a href="/login" class="connexion-button login" if={state.user === null}>
        Login
      </a>
      <a href="/register" class="connexion-button register" if={state.user === null}>
        Sign Up
      </a>
    </div>
  </header>
  <script>
    import { auth, db } from "../utils/firebase";
    import { getFavorites } from "../utils/favorites";
    import appEvents from "../utils/events";
    import { waitUntilAuthReady } from "../utils/firebase";

    export default {
      state: {
        favoritesCount: 0,
        user: null,
      },
      gotoHome() {
        appEvents.trigger("search", { query: "", type: "release" });
      },
      async updateFavCount() {
        const favorites = await getFavorites();
        this.update({ favoritesCount: favorites.count });
      },
      async onMounted() {
        this.updateFunc = this.updateFavCount.bind(this);
        appEvents.on("favoritesUpdated", this.updateFunc);

        this.unsubAuthListener = auth.onAuthStateChanged(async () => {
          if (auth.currentUser) {
            const doc = await db.collection("users").doc(auth.currentUser.uid).get();
            const favorites = await getFavorites();

            this.update({ user: { ...auth.currentUser, ...doc.data() }, favoritesCount: favorites.count });
          } else {
            this.update({ user: null, favoritesCount: 0 });
          }
        });
      },
      logout() {
        auth.signOut();
        window.location.reload();
      },
      onBeforeUnmount() {
        if (this.updateFunc) appEvents.off("favoritesUpdated", this.updateFunc);
        if (this.unsubAuthListener) this.unsubAuthListener();
      }
    }
  </script>
</navbar>
