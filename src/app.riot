<app>
  <div class="container">
    <navbar title={props.title} />
    <router>
      <route each={page in state.pages} path={page.href}>
        <main is={page.componentName} />
        <not-found if={state.showNotFound} />
      </route>
    </router>
  </div>
  <script>
    import { Router, Route, route, toRegexp, match } from "@riotjs/route";
    import firebase from "firebase/compat/app";
    import "firebase/compat/auth";
    import "firebase/compat/firestore";
    import pages from "./pages";
    import Home from "./pages/home.riot";
    import Favorites from "./pages/favorites.riot";
    import Login from "./pages/login.riot";
    import Register from "./pages/register.riot";
    import NotFound from "./pages/not-found.riot";

    const auth = firebase.auth();
    const db = firebase.firestore();

    console.log(auth.currentUser);

    export default {
      components: {
        Router,
        Route,
        Home,
        Favorites,
        Login,
        Register,
        NotFound,
      },
      state: {
        pages,
        showNotFound: false,
      },
      onMounted(props, state) {
        this.anyRouteStream = route("(.*)");
        
        this.anyRouteStream.on.value((path) => {
          this.update({
            showNotFound: !this.state.pages.some((p) => match(path.pathname, toRegexp(p?.path)))
          });
        });
      },
      onUnmounted() {
        this.anyRouteStream.end();
      },
    }
  </script>
</app>
